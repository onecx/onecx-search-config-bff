openapi: "3.0.3"
info:
  title: onecx-search-config-bff
  description: Backend-For-Frontend (BFF) service for onecx-search-config. This API provides endpoints to manage Search Configurations
  version: "1.0"
servers:
  - url: http://onecx-search-config-bff:8080
tags:
  - name: searchConfig
    description: Managing Search Configurations
paths:
  /searchConfig/{id}:
    put:
      x-onecx:
        permissions:
          searchConfig:
            - write
      tags:
        - searchConfig
      description: Updates a search config by its id and returns the updated list of search configs by page
      operationId: updateSearchConfig
      parameters:
        - name: id
          in: path
          description: Id for the search config to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated values for the specified search config
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSearchConfigRequest"
        required: true
      responses:
        "200":
          description: Search configuration updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSearchConfigResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetailResponse"
    delete:
      x-onecx:
        permissions:
          searchConfig:
            - delete
      tags:
        - searchConfig
      description: Delete a search config by its id
      operationId: deleteSearchConfig
      parameters:
        - name: id
          in: path
          description: Id for the searchConfig to be deleted
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Search configuration deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetailResponse"
    get:
      x-onecx:
        permissions:
          searchConfig:
            - read
      tags:
        - searchConfig
      description: Get a search config by its id
      operationId: getSearchConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Search configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSearchConfigResponse"
        "404":
          description: Search configuration not found
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetailResponse"
  /searchConfig/infos:
    post:
      x-onecx:
        permissions:
          searchConfig:
            - read
      tags:
        - searchConfig
      description: Get the search config infos for the specified page.
      operationId: getSearchConfigInfos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSearchConfigInfosRequest"
      responses:
        "200":
          description: Search configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSearchConfigInfosResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetailResponse"
  /searchConfig:
    post:
      x-onecx:
        permissions:
          searchConfig:
            - write
      tags:
        - searchConfig
      description: Create a new search config and returns the updated list of search configs by page
      operationId: createSearchConfig
      requestBody:
        description: Creates a new search config
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSearchConfigRequest"
        required: true
      responses:
        "201":
          description: Search configuration created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSearchConfigResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetailResponse"
components:
  schemas:
    SearchConfigInfo:
      required:
        - id
        - name
        - columns
        - values
        - isReadonly
        - isAdvanced
      properties:
        id:
          type: string
        name:
          type: string
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string
        isReadonly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed

    SearchConfig:
      allOf:
        - $ref: "#/components/schemas/SearchConfigInfo"
      type: object
      required:
        - appId
        - productName
        - page
        - modificationCount
        - fieldListVersion
      properties:
        appId:
          type: string
        productName:
          type: string
        page:
          type: string
        modificationCount:
          type: integer
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.

    SearchConfigInfoList:
      type: object
      required:
        - configs
      properties:
        configs:
          type: array
          items:
            $ref: "#/components/schemas/SearchConfigInfo"

    UpdateSearchConfigRequest:
      type: object
      required:
        - searchConfig
      properties:
        searchConfig:
          $ref: "#/components/schemas/SearchConfig"

    UpdateSearchConfigResponse:
      allOf:
        - $ref: "#/components/schemas/SearchConfigInfoList"

    GetSearchConfigResponse:
      type: object
      required:
        - config
      properties:
        config:
          $ref: "#/components/schemas/SearchConfig"

    GetSearchConfigInfosRequest:
      type: object
      required:
        - productName
        - appId
        - page
      properties:
        productName:
          type: string
        appId:
          type: string
        page:
          type: string

    GetSearchConfigInfosResponse:
      allOf:
        - $ref: "#/components/schemas/SearchConfigInfoList"

    CreateSearchConfigRequest:
      type: object
      required:
        - productName
        - appId
        - page
        - name
        - fieldListVersion
        - isReadonly
        - isAdvanced
        - columns
        - values
      properties:
        productName:
          type: string
        appId:
          type: string
        page:
          type: string
        name:
          type: string
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.
        isReadonly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string

    CreateSearchConfigResponse:
      allOf:
        - $ref: "#/components/schemas/SearchConfigInfoList"
      type: object
      required:
        - id
      properties:
        id:
          type: string

    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: "#/components/schemas/ProblemDetailParam"
        invalidParams:
          type: array
          items:
            $ref: "#/components/schemas/ProblemDetailInvalidParam"

    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string

    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
